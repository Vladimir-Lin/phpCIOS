<?php
//////////////////////////////////////////////////////////////////////////////
// HTML生成器
//////////////////////////////////////////////////////////////////////////////
namespace CIOS                                                               ;
//////////////////////////////////////////////////////////////////////////////
class Html                                                                   {
//////////////////////////////////////////////////////////////////////////////
public $Type                                                                 ;
public $Tag                                                                  ;
public $Attributes                                                           ;
public $Tags                                                                 ;
public $Splitter                                                             ;
public $Tail                                                                 ;
public $Objects                                                              ;
//////////////////////////////////////////////////////////////////////////////
function __construct (                                                     ) {
  $this -> clear     (                                                     ) ;
}
//////////////////////////////////////////////////////////////////////////////
function __destruct (                                                      ) {
  ////////////////////////////////////////////////////////////////////////////
  unset             ( $this -> Attributes                                  ) ;
  unset             ( $this -> Tags                                        ) ;
  unset             ( $this -> Objects                                     ) ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 清除原有設定
//////////////////////////////////////////////////////////////////////////////
public function clear (                                                    ) {
  ////////////////////////////////////////////////////////////////////////////
  $this -> Type       = 0                                                    ;
  $this -> Tag        = ""                                                   ;
  $this -> Attributes = array (                                            ) ;
  $this -> Tags       = array (                                            ) ;
  $this -> Tail       = ""                                                   ;
  $this -> Objects    = array (                                            ) ;
  $this -> Splitter   = "\n"                                                 ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 指定文字匯出方式
//////////////////////////////////////////////////////////////////////////////
public function setType ( $T                                               ) {
  $this -> Type = $T                                                         ;
}
//////////////////////////////////////////////////////////////////////////////
// 依據內容種類指定文字匯出方式
//////////////////////////////////////////////////////////////////////////////
public function setExport ( $T                                             ) {
  ////////////////////////////////////////////////////////////////////////////
  switch                  ( strtolower ( $T )                              ) {
    //////////////////////////////////////////////////////////////////////////
    case "dom"                                                               :
      ////////////////////////////////////////////////////////////////////////
      $this -> Type = 1                                                      ;
      ////////////////////////////////////////////////////////////////////////
    break                                                                    ;
    //////////////////////////////////////////////////////////////////////////
    case "tag"                                                               :
      ////////////////////////////////////////////////////////////////////////
      $this -> Type = 2                                                      ;
      ////////////////////////////////////////////////////////////////////////
    break                                                                    ;
    //////////////////////////////////////////////////////////////////////////
    case "context"                                                           :
      ////////////////////////////////////////////////////////////////////////
      $this -> Type = 3                                                      ;
      ////////////////////////////////////////////////////////////////////////
    break                                                                    ;
    //////////////////////////////////////////////////////////////////////////
    case "container"                                                         :
      ////////////////////////////////////////////////////////////////////////
      $this -> Type = 4                                                      ;
      ////////////////////////////////////////////////////////////////////////
    break                                                                    ;
    //////////////////////////////////////////////////////////////////////////
    default                                                                  :
      ////////////////////////////////////////////////////////////////////////
      $this -> Type = 1                                                      ;
      ////////////////////////////////////////////////////////////////////////
    break                                                                    ;
    //////////////////////////////////////////////////////////////////////////
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 指定標籤
//////////////////////////////////////////////////////////////////////////////
public function setTag          ( $T                                       ) {
  ////////////////////////////////////////////////////////////////////////////
  $t               = strtolower ( $T                                       ) ;
  $this     -> Tag = $T                                                      ;
  ////////////////////////////////////////////////////////////////////////////
  if                            ( 0 == $this -> Type                       ) {
    $this   -> Type = 1                                                      ;
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  switch                        ( $t                                       ) {
    //////////////////////////////////////////////////////////////////////////
    case "input"                                                             :
    case "img"                                                               :
    case "br"                                                                :
      ////////////////////////////////////////////////////////////////////////
      $this -> Type = 2                                                      ;
      ////////////////////////////////////////////////////////////////////////
    break                                                                    ;
    //////////////////////////////////////////////////////////////////////////
    default                                                                  :
    break                                                                    ;
    //////////////////////////////////////////////////////////////////////////
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 指定物件對應
//////////////////////////////////////////////////////////////////////////////
public function setObject ( $INDEX , $OBJECT                               ) {
  $this -> Objects [ $INDEX ] = $OBJECT                                      ;
}
//////////////////////////////////////////////////////////////////////////////
// 取得物件
//////////////////////////////////////////////////////////////////////////////
public function getObject ( $INDEX                                         ) {
  return $this -> Objects [ $INDEX                                         ] ;
}
//////////////////////////////////////////////////////////////////////////////
// 指定文字內容
//////////////////////////////////////////////////////////////////////////////
public function setText ( $T                                               ) {
  ////////////////////////////////////////////////////////////////////////////
  $this -> Tag  = $T                                                         ;
  $this -> Type = 3                                                          ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 新增文字內容
//////////////////////////////////////////////////////////////////////////////
public function AddText ( $T                                               ) {
  ////////////////////////////////////////////////////////////////////////////
  $H     = new Html     (                                                  ) ;
  $H    -> setText      ( $T                                               ) ;
  $this -> AddTag       ( $H                                               ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $H                                                                  ;
}
//////////////////////////////////////////////////////////////////////////////
// 從檔案中載入文字內容
//////////////////////////////////////////////////////////////////////////////
public function LoadText     ( $FILENAME                                   ) {
  ////////////////////////////////////////////////////////////////////////////
  $TXT   = file_get_contents ( $FILENAME                                   ) ;
  $this -> AddText           ( $TXT                                        ) ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 指定分隔符
//////////////////////////////////////////////////////////////////////////////
public function setSplitter ( $S = "\n"                                    ) {
  ////////////////////////////////////////////////////////////////////////////
  $this -> Splitter = $S                                                     ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 指定結尾符
//////////////////////////////////////////////////////////////////////////////
public function setTail ( $T = "\n"                                        ) {
  ////////////////////////////////////////////////////////////////////////////
  $this -> Tail = $T                                                         ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 新增子元件
//////////////////////////////////////////////////////////////////////////////
public function NewChild (                                                 ) {
  ////////////////////////////////////////////////////////////////////////////
  $NT    = new Html      (                                                 ) ;
  $this -> AddTag        ( $NT                                             ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $NT                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 從最後方新增附屬元件
//////////////////////////////////////////////////////////////////////////////
public function AddTag ( $T                                                ) {
  ////////////////////////////////////////////////////////////////////////////
  array_push           ( $this -> Tags , $T                                ) ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 從最前方新增附屬元件
//////////////////////////////////////////////////////////////////////////////
public function PrependTag ( $T                                            ) {
  ////////////////////////////////////////////////////////////////////////////
  array_unshift            ( $this -> Tags , $T                            ) ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 新增屬性成員
//////////////////////////////////////////////////////////////////////////////
public function AddMember ( $M                                             ) {
  ////////////////////////////////////////////////////////////////////////////
  array_push              ( $this -> Attributes , $M                       ) ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 關鍵值對
//////////////////////////////////////////////////////////////////////////////
public function KeyPair                  ( $N , $V                         ) {
  return $N . "=" . $this -> DoubleQuote (      $V                         ) ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增關鍵值對
//////////////////////////////////////////////////////////////////////////////
public function AddPair     (                    $N , $V                   ) {
  return $this -> AddMember ( $this -> KeyPair ( $N , $V )                 ) ;
}
//////////////////////////////////////////////////////////////////////////////
// 安全新增關鍵值對
//////////////////////////////////////////////////////////////////////////////
public function SafePair  ( $N , $V                                        ) {
  ////////////////////////////////////////////////////////////////////////////
  if                      ( is_null ( $N )      ) return                     ;
  if                      ( is_null ( $V )      ) return                     ;
  if                      ( strlen  ( $N ) <= 0 ) return                     ;
  if                      ( strlen  ( $V ) <= 0 ) return                     ;
  ////////////////////////////////////////////////////////////////////////////
  return $this -> AddPair ( $N , $V                                        ) ;
}
//////////////////////////////////////////////////////////////////////////////
// 結尾標籤
//////////////////////////////////////////////////////////////////////////////
public function EndTag (                                                   ) {
  ////////////////////////////////////////////////////////////////////////////
  if ( strlen ( $this -> Tag ) <= 0 ) return ""                              ;
  ////////////////////////////////////////////////////////////////////////////
  return "</" . $this -> Tag . ">"                                           ;
}
//////////////////////////////////////////////////////////////////////////////
// 雙括號封裝
//////////////////////////////////////////////////////////////////////////////
public function DoubleQuote ( $T                                           ) {
  return "\"{$T}\""                                                          ;
}
//////////////////////////////////////////////////////////////////////////////
// 單括號封裝
//////////////////////////////////////////////////////////////////////////////
public function SingleQuote ( $T )                                           {
  return "'{$T}'"                                                            ;
}
//////////////////////////////////////////////////////////////////////////////
// 雙括號封裝
//////////////////////////////////////////////////////////////////////////////
public function DQ            ( $T                                         ) {
  return $this -> DoubleQuote ( $T                                         ) ;
}
//////////////////////////////////////////////////////////////////////////////
// 單括號封裝
//////////////////////////////////////////////////////////////////////////////
public function SQ            ( $T                                         ) {
  return $this -> SingleQuote ( $T                                         ) ;
}
//////////////////////////////////////////////////////////////////////////////
// 換行
//////////////////////////////////////////////////////////////////////////////
public function NewLine (                                                  ) {
  return "\n"                                                                ;
}
//////////////////////////////////////////////////////////////////////////////
// 產生HTML標籤語法
//////////////////////////////////////////////////////////////////////////////
public function Html          (                                            ) {
  ////////////////////////////////////////////////////////////////////////////
  $H     = "<" . $this -> Tag                                                ;
  ////////////////////////////////////////////////////////////////////////////
  if                          ( count ( $this -> Attributes ) > 0          ) {
    //////////////////////////////////////////////////////////////////////////
    $H   = $H . " " . implode ( " " ,   $this -> Attributes                ) ;
    //////////////////////////////////////////////////////////////////////////
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  switch                      ( $this -> Type                              ) {
    //////////////////////////////////////////////////////////////////////////
    case 2                                                                   :
      ////////////////////////////////////////////////////////////////////////
      $H = $H . " />"                                                        ;
      ////////////////////////////////////////////////////////////////////////
    break                                                                    ;
    //////////////////////////////////////////////////////////////////////////
    default                                                                  :
      ////////////////////////////////////////////////////////////////////////
      $H = $H . ">"                                                          ;
      ////////////////////////////////////////////////////////////////////////
    break                                                                    ;
    //////////////////////////////////////////////////////////////////////////
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  return $H                                                                  ;
}
//////////////////////////////////////////////////////////////////////////////
// 完整HTML標籤內容
//////////////////////////////////////////////////////////////////////////////
public function Inside ( $Content                                          ) {
  return $this -> Html   ( ) . $this -> Splitter                             .
         $Content            . $this -> Splitter                             .
         $this -> EndTag ( ) . $this -> Tail                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 內部HTML標籤內容
//////////////////////////////////////////////////////////////////////////////
public function TagsContent (                                              ) {
  ////////////////////////////////////////////////////////////////////////////
  if                        ( count ( $this -> Tags ) <= 0                 ) {
    return ""                                                                ;
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  $A = array                (                                              ) ;
  ////////////////////////////////////////////////////////////////////////////
  foreach                   ( $this -> Tags as $T                          ) {
    array_push              ( $A , $T -> Content (                       ) ) ;
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  $L = implode              ( $this -> Splitter , $A                       ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $L                                                                  ;
}
//////////////////////////////////////////////////////////////////////////////
// 指定div標籤
//////////////////////////////////////////////////////////////////////////////
public function setDiv ( $Msg = "" , $IDNAME = "" , $CLASSNAME = ""        ) {
  ////////////////////////////////////////////////////////////////////////////
  $this   -> Tag  = "div"                                                    ;
  $this   -> Type = 1                                                        ;
  ////////////////////////////////////////////////////////////////////////////
  $this   -> SafePair  ( "id"    , $IDNAME                                 ) ;
  $this   -> SafePair  ( "class" , $CLASSNAME                              ) ;
  ////////////////////////////////////////////////////////////////////////////
  $T       = "{$Msg}"                                                        ;
  ////////////////////////////////////////////////////////////////////////////
  if                   ( is_a ( $Msg , "CIOS\Html" )                       ) {
    //////////////////////////////////////////////////////////////////////////
    $this -> AddTag    ( $Msg                                              ) ;
    //////////////////////////////////////////////////////////////////////////
  } else
  if                   ( strlen ( $T ) > 0                                 ) {
    //////////////////////////////////////////////////////////////////////////
    $this -> AddText   ( $T                                                ) ;
    //////////////////////////////////////////////////////////////////////////
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 指定span標籤
//////////////////////////////////////////////////////////////////////////////
public function setSpan ( $Msg = "" , $IDNAME = "" , $CLASSNAME = ""       ) {
  ////////////////////////////////////////////////////////////////////////////
  $this   -> Tag  = "span"                                                   ;
  $this   -> Type = 1                                                        ;
  ////////////////////////////////////////////////////////////////////////////
  $this   -> SafePair   ( "id"    , $IDNAME                                ) ;
  $this   -> SafePair   ( "class" , $CLASSNAME                             ) ;
  ////////////////////////////////////////////////////////////////////////////
  $T       = "{$Msg}"                                                        ;
  ////////////////////////////////////////////////////////////////////////////
  if                    ( is_a ( $Msg , "CIOS\Html" )                      ) {
    $this -> AddTag     ( $Msg                                             ) ;
  } else
  if                    ( strlen ( $T ) > 0                                ) {
    $this -> AddText    ( $T                                               ) ;
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 指定input標籤
//////////////////////////////////////////////////////////////////////////////
public function setInput (                                                 ) {
  ////////////////////////////////////////////////////////////////////////////
  $this -> Tag  = "input"                                                    ;
  $this -> Type = 2                                                          ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 指定input標籤隱藏類型
//////////////////////////////////////////////////////////////////////////////
public function setHiddenInput (                                           ) {
  ////////////////////////////////////////////////////////////////////////////
  $this -> setInput            (                                           ) ;
  $this -> AddPair             ( "type" , "hidden"                         ) ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 指定script區塊
//////////////////////////////////////////////////////////////////////////////
public function setScript ( $SRC                                           ) {
  ////////////////////////////////////////////////////////////////////////////
  $this -> Tag  = "script"                                                   ;
  $this -> Type = 1                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  $this -> SafePair       ( "src" , $SRC                                   ) ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 載入script區塊
//////////////////////////////////////////////////////////////////////////////
public function LoadScript ( $FILENAME                                     ) {
  ////////////////////////////////////////////////////////////////////////////
  $this -> Tag  = "script"                                                   ;
  $this -> Type = 1                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  $this -> LoadText        ( $FILENAME                                     ) ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 指定main標籤
//////////////////////////////////////////////////////////////////////////////
public function setMain (           $CLASSID                               ) {
  ////////////////////////////////////////////////////////////////////////////
  $this -> setTag       ( "main"                                           ) ;
  $this -> SafePair     ( "class" , $CLASSID                               ) ;
  $this -> setSplitter  ( "\n"                                             ) ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 指定規劃式table標籤
//////////////////////////////////////////////////////////////////////////////
public function ConfigureTable ( $BORDER = 0 , $SPACING = 0 , $PADDING = 0 ) {
  ////////////////////////////////////////////////////////////////////////////
  $this -> setTag              ( "table"                                   ) ;
  $this -> AddPair             ( "width"       , "100%"                    ) ;
  $this -> AddPair             ( "border"      , $BORDER                   ) ;
  $this -> AddPair             ( "cellspacing" , $SPACING                  ) ;
  $this -> AddPair             ( "cellpadding" , $PADDING                  ) ;
  ////////////////////////////////////////////////////////////////////////////
  $HB    = new Html            (                                           ) ;
  $HB   -> setTag              ( "tbody"                                   ) ;
  $HB   -> setSplitter         ( "\n"                                      ) ;
  $this -> AddTag              ( $HB                                       ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $HB                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增div標籤
//////////////////////////////////////////////////////////////////////////////
public function addDiv ( $Msg = "" , $IDNAME = "" , $CLASSNAME = ""        ) {
  ////////////////////////////////////////////////////////////////////////////
  $HD    = new Html    (                                                   ) ;
  $HD   -> setDiv      ( $Msg      , $IDNAME      , $CLASSNAME             ) ;
  $this -> AddTag      ( $HD                                               ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $HD                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增span標籤
//////////////////////////////////////////////////////////////////////////////
public function addSpan ( $Msg = "" , $IDNAME = "" , $CLASSNAME = ""       ) {
  ////////////////////////////////////////////////////////////////////////////
  $HD    = new Html     (                                                  ) ;
  $HD   -> setSpan      ( $Msg      , $IDNAME      , $CLASSNAME            ) ;
  $this -> AddTag       ( $HD                                              ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $HD                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增tr標籤
//////////////////////////////////////////////////////////////////////////////
public function addTr (                                                    ) {
  ////////////////////////////////////////////////////////////////////////////
  $HR    = new Html   (                                                    ) ;
  $HR   -> setTag     ( "tr"                                               ) ;
  $this -> AddTag     ( $HR                                                ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $HR                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增td標籤
//////////////////////////////////////////////////////////////////////////////
public function addTd ( $MSG = ""                                          ) {
  ////////////////////////////////////////////////////////////////////////////
  $HD    = new Html   (                                                    ) ;
  $HD   -> setTag     ( "td"                                               ) ;
  $this -> AddTag     ( $HD                                                ) ;
  ////////////////////////////////////////////////////////////////////////////
  $T     = "{$MSG}"                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  if                  ( is_a ( $MSG , "CIOS\Html" )                        ) {
    $HD -> AddTag     ( $MSG                                               ) ;
  } else
  if                  ( strlen ( $T ) > 0                                  ) {
    $HD -> AddText    ( $T                                                 ) ;
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  return $HD                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增th標籤
//////////////////////////////////////////////////////////////////////////////
public function addTh ( $MSG = ""                                          ) {
  ////////////////////////////////////////////////////////////////////////////
  $HD    = new Html   (                                                    ) ;
  $HD   -> setTag     ( "th"                                               ) ;
  $this -> AddTag     ( $HD                                                ) ;
  ////////////////////////////////////////////////////////////////////////////
  $T     = "{$MSG}"                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  if                  ( is_a ( $MSG , "CIOS\Html" )                        ) {
    $HD -> AddTag     ( $MSG                                               ) ;
  } else
  if                  ( strlen ( $T ) > 0                                  ) {
    $HD -> AddText    ( $T                                                 ) ;
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  return $HD                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增整群td內容
//////////////////////////////////////////////////////////////////////////////
public function addTDs   ( $MSGs                                           ) {
  ////////////////////////////////////////////////////////////////////////////
  $HDs  = array          (                                                 ) ;
  ////////////////////////////////////////////////////////////////////////////
  foreach                ( $MSGs as $msg                                   ) {
    //////////////////////////////////////////////////////////////////////////
    $HD = $this -> addTd ( $msg                                            ) ;
    array_push           ( $HDs , $HD                                      ) ;
    //////////////////////////////////////////////////////////////////////////
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  return $HDs                                                                ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增整群th內容
//////////////////////////////////////////////////////////////////////////////
public function addTHs   ( $MSGs                                           ) {
  ////////////////////////////////////////////////////////////////////////////
  $HDs  = array          (                                                 ) ;
  ////////////////////////////////////////////////////////////////////////////
  foreach                ( $MSGs as $msg                                   ) {
    //////////////////////////////////////////////////////////////////////////
    $HD = $this -> addTh ( $msg                                            ) ;
    array_push           ( $HDs , $HD                                      ) ;
    //////////////////////////////////////////////////////////////////////////
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  return $HDs                                                                ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增整群tr行
//////////////////////////////////////////////////////////////////////////////
public function addTrLine ( $MSGs                                          ) {
  ////////////////////////////////////////////////////////////////////////////
  $HR  = $this -> addTr   (                                                ) ;
  $HR          -> addTDs  ( $MSGs                                          ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $HR                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增整群tr/th行
//////////////////////////////////////////////////////////////////////////////
public function addTrThLine ( $MSGs                                        ) {
  ////////////////////////////////////////////////////////////////////////////
  $HR  = $this -> addTr     (                                              ) ;
  $HR          -> addTHs    ( $MSGs                                        ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $HR                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增內容到tr/td內部
//////////////////////////////////////////////////////////////////////////////
public function appendTrLine ( $Inner                                      ) {
  ////////////////////////////////////////////////////////////////////////////
  $HR  = $this -> addTr      (                                             ) ;
  $HD  = $HR   -> addTd      (                                             ) ;
  $HD -> AddTag              ( $Inner                                      ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $HR                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增內容到tr/th內部
//////////////////////////////////////////////////////////////////////////////
public function appendTrThLine ( $Inner                                    ) {
  ////////////////////////////////////////////////////////////////////////////
  $HR  = $this -> addTr        (                                           ) ;
  $HD  = $HR   -> addTh        (                                           ) ;
  $HD -> AddTag                ( $Inner                                    ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $HR                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增select標籤
//////////////////////////////////////////////////////////////////////////////
public function addSelect (           $CLASSID = ""                        ) {
  ////////////////////////////////////////////////////////////////////////////
  $HS    = new Html       (                                                ) ;
  $HS   -> setTag         ( "select"                                       ) ;
  $HS   -> SafePair       ( "class" , $CLASSID                             ) ;
  $this -> AddTag         ( $HS                                            ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $HS                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增option標籤
//////////////////////////////////////////////////////////////////////////////
public function addOption ( $MSG = ""                                      ) {
  ////////////////////////////////////////////////////////////////////////////
  $HD    = new Html       (                                                ) ;
  $HD   -> setTag         ( "option"                                       ) ;
  $this -> AddTag         ( $HD                                            ) ;
  ////////////////////////////////////////////////////////////////////////////
  if                      ( is_a ( $MSG , "CIOS\Html" )                    ) {
    $HD -> AddTag         ( $MSG                                           ) ;
  } else
  if                      ( strlen ( $MSG ) > 0                            ) {
    $HD -> AddText        ( $MSG                                           ) ;
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  return $HD                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增整群option標籤
//////////////////////////////////////////////////////////////////////////////
public function addOptions    ( $MAPs , $ID = ""                           ) {
  ////////////////////////////////////////////////////////////////////////////
  $KS    = array_keys         ( $MAPs                                      ) ;
  ////////////////////////////////////////////////////////////////////////////
  foreach                     ( $KS as $ks                                 ) {
    //////////////////////////////////////////////////////////////////////////
    $HO  = $this -> addOption ( $MAPs [ $ks ]                              ) ;
    $HO -> AddPair            ( "value" , $ks                              ) ;
    //////////////////////////////////////////////////////////////////////////
    if                        ( strlen ( $ID ) > 0                         ) {
      if                      ( $ID == $ks                                 ) {
        $HO -> AddMember      ( "selected"                                 ) ;
      }                                                                      ;
    }                                                                        ;
    //////////////////////////////////////////////////////////////////////////
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 新增完整select/option選項群
//////////////////////////////////////////////////////////////////////////////
public function addSelection ( $MAPs , $ID = "" , $CLASSID = ""            ) {
  ////////////////////////////////////////////////////////////////////////////
  $HS  = $this -> addSelect  (                    $CLASSID                 ) ;
  $HS -> addOptions          ( $MAPs , $ID                                 ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $HS                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 組合完整select/option選項群
//////////////////////////////////////////////////////////////////////////////
function CombineSelections      ( $LISTS , $NAMES , $CURRENT = ""          ) {
  ////////////////////////////////////////////////////////////////////////////
  $this   -> setTag             ( "select"                                 ) ;
  ////////////////////////////////////////////////////////////////////////////
  foreach                       ( $LISTS as $L                             ) {
    //////////////////////////////////////////////////////////////////////////
    $HO    = $this -> addOption ( $NAMES [ $L ]                            ) ;
    $HO   -> AddPair            ( "value" , $L                             ) ;
    //////////////////////////////////////////////////////////////////////////
    if                          ( $L == $CURRENT                           ) {
      $HO -> AddMember          ( "selected"                               ) ;
    }                                                                        ;
    //////////////////////////////////////////////////////////////////////////
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 新增button標籤
//////////////////////////////////////////////////////////////////////////////
public function addButton ( $MSG = ""                                      ) {
  ////////////////////////////////////////////////////////////////////////////
  $HD    = new Html       (                                                ) ;
  $HD   -> setTag         ( "button"                                       ) ;
  $this -> AddTag         ( $HD                                            ) ;
  ////////////////////////////////////////////////////////////////////////////
  if                      ( is_a ( $MSG , "CIOS\Html" )                    ) {
    $HD -> AddTag         ( $MSG                                           ) ;
  } else
  if                      ( strlen ( $MSG ) > 0                            ) {
    $HD -> AddText        ( $MSG                                           ) ;
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  return $HD                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增input標籤
//////////////////////////////////////////////////////////////////////////////
public function addInput (           $MSG = ""                             ) {
  ////////////////////////////////////////////////////////////////////////////
  $HI    = new Html      (                                                 ) ;
  $HI   -> setInput      (                                                 ) ;
  $HI   -> SafePair      ( "value" , $MSG                                  ) ;
  ////////////////////////////////////////////////////////////////////////////
  $this -> AddTag        ( $HI                                             ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $HI                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增具有內容的td標籤
//////////////////////////////////////////////////////////////////////////////
public function addNameTd ( $NAME , $WIDTH = "20%" , $CLASSID="NameLabel"  ) {
  ////////////////////////////////////////////////////////////////////////////
  $HD   = $this -> addTd  (                                                ) ;
  ////////////////////////////////////////////////////////////////////////////
  $HD  -> setSplitter     ( "\n"                                           ) ;
  $HD  -> SafePair        ( "width"  , $WIDTH                              ) ;
  $HD  -> AddPair         ( "nowrap" , "nowrap"                            ) ;
  $DIV  = $HD  -> addDiv  ( $NAME    , "" , $CLASSID                       ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $HD                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 增加指定的HTML標籤
//////////////////////////////////////////////////////////////////////////////
public function addHtml ( $TAG = ""                                        ) {
  ////////////////////////////////////////////////////////////////////////////
  $HI    = new Html     (                                                  ) ;
  ////////////////////////////////////////////////////////////////////////////
  if                    ( strlen ( $TAG ) > 0                              ) {
    $HI -> setTag       ( $TAG                                             ) ;
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  $this -> AddTag       ( $HI                                              ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $HI                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增No Wrap屬性
//////////////////////////////////////////////////////////////////////////////
public function NoWrap (                     )                               {
  $this -> AddPair     ( "nowrap" , "nowrap" )                               ;
}
//////////////////////////////////////////////////////////////////////////////
// 新增壓縮空間屬性
//////////////////////////////////////////////////////////////////////////////
public function Compact ( $WIDTH = "1%"       )                              {
  ////////////////////////////////////////////////////////////////////////////
  $this -> AddPair      ( "nowrap" , "nowrap" )                              ;
  $this -> AddPair      ( "width"  , $WIDTH   )                              ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
// 新增tr空白行
//////////////////////////////////////////////////////////////////////////////
public function addEmptyLine ( $MSG="&nbsp;" , $COLSPAN=1 , $KEYID="Empty" ) {
  ////////////////////////////////////////////////////////////////////////////
  $HR  = $this -> addTr      (                                             ) ;
  $HD  = $HR   -> addTd      ( $MSG                                        ) ;
  $HD -> AddPair             ( "colspan" , $COLSPAN                        ) ;
  $HR -> setObject           ( $KEYID    , $HD                             ) ;
  ////////////////////////////////////////////////////////////////////////////
  return $HR                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 生成HTML內容
//////////////////////////////////////////////////////////////////////////////
public function Content    (                                               ) {
  ////////////////////////////////////////////////////////////////////////////
  switch                   ( $this -> Type                                 ) {
    //////////////////////////////////////////////////////////////////////////
    case 1                                                                   :
    return $this -> Inside ( $this -> TagsContent ( )                      ) ;
    //////////////////////////////////////////////////////////////////////////
    case 2                                                                   :
    return $this -> Html        ( ) . $this -> Tail                          ;
    //////////////////////////////////////////////////////////////////////////
    case 3                                                                   :
    return $this -> Tag             . $this -> Tail                          ;
    //////////////////////////////////////////////////////////////////////////
    case 4                                                                   :
    return $this -> TagsContent ( ) . $this -> Tail                          ;
    //////////////////////////////////////////////////////////////////////////
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  return ""                                                                  ;
}
//////////////////////////////////////////////////////////////////////////////
// 計算textarea行數
//////////////////////////////////////////////////////////////////////////////
public function TextAreaLines ( $TEXT , $LEN = 80                          ) {
  ////////////////////////////////////////////////////////////////////////////
  $LC   = 0                                                                  ;
  $TS   = explode             ( "\n" , $TEXT                               ) ;
  ////////////////////////////////////////////////////////////////////////////
  foreach                     ( $TS as $t                                  ) {
    //////////////////////////////////////////////////////////////////////////
    $L  = strlen              ( $t                                         ) ;
    $L  = $L + $LEN - 1                                                      ;
    $L  = intval              ( $L / $LEN , 10                             ) ;
    $LC = $LC + $L                                                           ;
    //////////////////////////////////////////////////////////////////////////
  }                                                                          ;
  ////////////////////////////////////////////////////////////////////////////
  return $LC                                                                 ;
}
//////////////////////////////////////////////////////////////////////////////
// 輸出HTML內容
//////////////////////////////////////////////////////////////////////////////
public function Report  (                                                  ) {
  ////////////////////////////////////////////////////////////////////////////
  echo $this -> Content (                                                  ) ;
  echo "\n"                                                                  ;
  ////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////////
?>
